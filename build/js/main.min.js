/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/webpack/buildin/module.js":
/*!*************************************************!*\
  !*** ../node_modules/webpack/buildin/module.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_mobile_vh_fix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/mobile-vh-fix */ "./js/utils/mobile-vh-fix.js");
/* harmony import */ var _modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/modals/init-modals */ "./js/modules/modals/init-modals.js");
/* harmony import */ var _modules_init_move_to__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/init-move-to */ "./js/modules/init-move-to.js");
/* harmony import */ var _modules_input_file_init_upload__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/input-file/init-upload */ "./js/modules/input-file/init-upload.js");
/* harmony import */ var _modules_burger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/burger */ "./js/modules/burger.js");
/* harmony import */ var _modules_check_theme_header__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/check-theme-header */ "./js/modules/check-theme-header.js");
/* harmony import */ var _modules_blink__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/blink */ "./js/modules/blink.js");
/* harmony import */ var _modules_init_map__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/init-map */ "./js/modules/init-map.js");
/* harmony import */ var _modules_init_stages_project_slider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/init-stages-project-slider */ "./js/modules/init-stages-project-slider.js");
/* harmony import */ var _modules_accordions_init_accordion__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/accordions/init-accordion */ "./js/modules/accordions/init-accordion.js");
/* harmony import */ var _modules_init_animate_count__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/init-animate-count */ "./js/modules/init-animate-count.js");
/* harmony import */ var _modules_form_init_form_validate__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./modules/form/init-form-validate */ "./js/modules/form/init-form-validate.js");












window.addEventListener('DOMContentLoaded', function () {
  Object(_utils_mobile_vh_fix__WEBPACK_IMPORTED_MODULE_0__["mobileVhFix"])();
  window.addEventListener('load', function () {
    Object(_modules_init_move_to__WEBPACK_IMPORTED_MODULE_2__["initMoveTo"])();
    Object(_modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__["initModals"])();
    Object(_modules_input_file_init_upload__WEBPACK_IMPORTED_MODULE_3__["initUpload"])();
    Object(_modules_form_init_form_validate__WEBPACK_IMPORTED_MODULE_11__["initFormValidate"])();
    var burger = new _modules_burger__WEBPACK_IMPORTED_MODULE_4__["Burger"]();
    burger.init();
    Object(_modules_accordions_init_accordion__WEBPACK_IMPORTED_MODULE_9__["initAccordions"])();
    Object(_modules_check_theme_header__WEBPACK_IMPORTED_MODULE_5__["checkThemeHeader"])();
    Object(_modules_blink__WEBPACK_IMPORTED_MODULE_6__["blink"])();
    Object(_modules_init_map__WEBPACK_IMPORTED_MODULE_7__["initYM"])();
    Object(_modules_init_stages_project_slider__WEBPACK_IMPORTED_MODULE_8__["initStagesProjectSlider"])();
    Object(_modules_init_animate_count__WEBPACK_IMPORTED_MODULE_10__["initAnimateCount"])();
  });
});

/***/ }),

/***/ "./js/modules/accordions/accordions.js":
/*!*********************************************!*\
  !*** ./js/modules/accordions/accordions.js ***!
  \*********************************************/
/*! exports provided: Accordions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Accordions", function() { return Accordions; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Accordions = /*#__PURE__*/function () {
  function Accordions() {
    _classCallCheck(this, Accordions);
    this._openHeight = 0;
    this._windowWidth = window.innerWidth;
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._windowResizeHandler = this._windowResizeHandler.bind(this);
    this._init();
  }
  _createClass(Accordions, [{
    key: "_init",
    value: function _init() {
      this.fullUpdate();
      document.addEventListener('click', this._documentClickHandler);
      window.addEventListener('resize', this._windowResizeHandler);
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-accordion="button"]')) {
        return;
      }
      evt.preventDefault();
      var parent = target.closest('[data-accordion="parent"]');
      if (parent.dataset.destroy && !window.matchMedia(parent.dataset.destroy).matches) {
        return;
      }
      var element = target.closest('[data-accordion="element"]');
      if (element.classList.contains('is-active')) {
        this.closeAccordion(element);
        return;
      }
      this.openAccordion(element);
    }
  }, {
    key: "_windowResizeHandler",
    value: function _windowResizeHandler() {
      if (this._windowWidth === window.innerWidth) {
        return;
      }
      this._windowWidth = window.innerWidth;
      this.updateAccordionsHeight();
    }
  }, {
    key: "closeAllAccordion",
    value: function closeAllAccordion(parent) {
      var _this = this;
      var elements = parent.querySelectorAll('[data-accordion="element"]');
      elements.forEach(function (element) {
        var currentParent = element.closest('[data-accordion="parent"]');
        if (currentParent === parent) {
          _this.closeAccordion(element);
        }
      });
    }
  }, {
    key: "updateAccordionsHeight",
    value: function updateAccordionsHeight() {
      var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      if (element) {
        var content = element.querySelector('[data-accordion="content"]');
        content.style.transition = 'none';
        content.style.maxHeight = "".concat(content.scrollHeight, "px");
        setTimeout(function () {
          content.style.transition = null;
        });
        return;
      }
      var closeElements = document.querySelectorAll('[data-accordion="element"]:not(.is-active)');
      closeElements.forEach(function (closeElement) {
        var parent = closeElement.closest('[data-accordion="parent"]');
        var content = closeElement.querySelector('[data-accordion="content"]');
        if (parent.dataset.destroy && !window.matchMedia(parent.dataset.destroy).matches) {
          content.style.maxHeight = '100%';
          return;
        }
        content.style.maxHeight = null;
      });
      var openElements = document.querySelectorAll('[data-accordion="element"].is-active');
      openElements.forEach(function (openElement) {
        var content = openElement.querySelector('[data-accordion="content"]');
        var parent = openElement.closest('[data-accordion="parent"]');
        if (parent.dataset.destroy && !window.matchMedia(parent.dataset.destroy).matches) {
          content.style.maxHeight = '100%';
          return;
        }
        content.style.transition = 'none';
        content.style.maxHeight = "".concat(content.scrollHeight, "px");
        setTimeout(function () {
          content.style.transition = null;
        });
      });
    }
  }, {
    key: "fullUpdate",
    value: function fullUpdate() {
      var _this2 = this;
      var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var openElements;
      if (parent) {
        openElements = parent.querySelectorAll('[data-accordion="element"].is-active');
      } else {
        openElements = document.querySelectorAll('[data-accordion="element"].is-active');
      }
      openElements.forEach(function (openElement) {
        var innerParent = openElement.querySelector('[data-accordion="parent"]');
        if (innerParent) {
          return;
        }
        _this2.openAccordion(openElement, transition);
      });
      this.updateAccordionsHeight();
    }
  }, {
    key: "openAccordion",
    value: function openAccordion(element) {
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var parentElement = element.closest('[data-accordion="parent"]');
      var contentElement = element.querySelector('[data-accordion="content"]');
      this._openHeight += contentElement.scrollHeight;
      if (parentElement.hasAttribute('data-single')) {
        this.closeAllAccordion(parentElement);
      }
      element.classList.add('is-active');
      if (transition) {
        contentElement.style.maxHeight = "".concat(this._openHeight, "px");
      } else {
        contentElement.style.transition = 'none';
        contentElement.style.maxHeight = "".concat(this._openHeight, "px");
        setTimeout(function () {
          contentElement.style.transition = null;
        });
      }
      if (parentElement.closest('[data-accordion="element"]')) {
        this.openAccordion(parentElement.closest('[data-accordion="element"]'), transition);
        return;
      }
      this._openHeight = 0;
    }
  }, {
    key: "closeAccordion",
    value: function closeAccordion(element) {
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var contentElement = element.querySelector('[data-accordion="content"]');
      if (!contentElement) {
        return;
      }
      element.classList.remove('is-active');
      if (transition) {
        contentElement.style.maxHeight = '0';
      } else {
        contentElement.style.transition = 'none';
        contentElement.style.maxHeight = '0';
        setTimeout(function () {
          contentElement.style.transition = null;
        });
      }
    }
  }]);
  return Accordions;
}();

/***/ }),

/***/ "./js/modules/accordions/init-accordion.js":
/*!*************************************************!*\
  !*** ./js/modules/accordions/init-accordion.js ***!
  \*************************************************/
/*! exports provided: initAccordions, accordions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initAccordions", function() { return initAccordions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accordions", function() { return accordions; });
/* harmony import */ var _accordions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accordions */ "./js/modules/accordions/accordions.js");

var accordions;
var initAccordions = function initAccordions() {
  accordions = new _accordions__WEBPACK_IMPORTED_MODULE_0__["Accordions"]();
  // Используйте в разработке экспортируемую переменную accordions, window сделан для бэкэнда
  window.accordions = accordions;
};


/***/ }),

/***/ "./js/modules/animate-count.js":
/*!*************************************!*\
  !*** ./js/modules/animate-count.js ***!
  \*************************************/
/*! exports provided: animateCount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animateCount", function() { return animateCount; });
var fps = 6;
var fpsInterval = 1000 / fps;
var animateCount = function animateCount(el, values) {
  var frameValues = values;
  var count = frameValues.length;
  var countElement = el;
  var now;
  var then = Date.now();
  var elapsed;
  var i = 0;
  var draw = function draw(frame) {
    countElement.textContent = frame;
  };
  var tick = function tick() {
    if (i < count) {
      requestAnimationFrame(tick);
    }
    now = Date.now();
    elapsed = now - then;
    if (elapsed > fpsInterval) {
      then = now - elapsed % fpsInterval;
      draw(frameValues[i]);
      i++;
    }
  };
  requestAnimationFrame(tick);
};


/***/ }),

/***/ "./js/modules/blink.js":
/*!*****************************!*\
  !*** ./js/modules/blink.js ***!
  \*****************************/
/*! exports provided: blink */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blink", function() { return blink; });
var blink = function blink() {
  var breakpoint = window.matchMedia("(min-width: 768px)");
  var blinkContainer = document.querySelector('.intro__ticker');
  if (!blinkContainer) {
    return;
  }
  var blinkItems = Array.from(blinkContainer.querySelectorAll('.intro-item:not(.intro-item--icon)'));
  var leftBorder;
  var rightBorder;
  var fillColorItems = function fillColorItems() {
    var _loop = function _loop() {
      var coords = blinkItems[i].getBoundingClientRect();
      if (coords.left > leftBorder & coords.left < rightBorder) {
        var currentItem = blinkItems[i];
        currentItem.classList.add('fill-color');
        setTimeout(function () {
          return currentItem.classList.remove('fill-color');
        }, 1450);
        return "break";
      }
    };
    for (var i = 0; i < blinkItems.length; i++) {
      var _ret = _loop();
      if (_ret === "break") break;
    }
  };
  var breakpointChecker = function breakpointChecker() {
    if (breakpoint.matches) {
      leftBorder = document.documentElement.clientWidth / 4;
      rightBorder = leftBorder + leftBorder * 0.15;
    } else {
      leftBorder = document.documentElement.clientWidth / 4;
      rightBorder = leftBorder + leftBorder * 0.4;
    }
  };
  breakpoint.addListener(breakpointChecker);
  breakpointChecker();
  setInterval(fillColorItems, 500);
};


/***/ }),

/***/ "./js/modules/burger.js":
/*!******************************!*\
  !*** ./js/modules/burger.js ***!
  \******************************/
/*! exports provided: Burger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Burger", function() { return Burger; });
/* harmony import */ var _vendor_scroll_lock_min__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/scroll-lock.min */ "./js/vendor/scroll-lock.min.js");
/* harmony import */ var _vendor_scroll_lock_min__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_vendor_scroll_lock_min__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/focus-lock */ "./js/utils/focus-lock.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var Burger = /*#__PURE__*/function () {
  function Burger() {
    _classCallCheck(this, Burger);
    this._header = document.querySelector('[data-header]');
    this._burger = document.querySelector('[data-burger]');
    this._scrollLock = _vendor_scroll_lock_min__WEBPACK_IMPORTED_MODULE_0___default.a;
    this._focusLock = new _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__["FocusLock"]();
    this._isMenuOpen = false;
    this._onBurgerClick = this._onBurgerClick.bind(this);
    this._onDocumentKeydown = this._onDocumentKeydown.bind(this);
    this._onDocumentClick = this._onDocumentClick.bind(this);
  }
  _createClass(Burger, [{
    key: "init",
    value: function init() {
      if (!this._burger) {
        return;
      }
      this._burger.addEventListener('click', this._onBurgerClick);
    }
  }, {
    key: "_openMenu",
    value: function _openMenu() {
      this._isMenuOpen = true;
      this._header.classList.add('is-open');
      this._scrollLock.disablePageScroll();
      document.addEventListener('keydown', this._onDocumentKeydown);
      document.addEventListener('click', this._onDocumentClick);
      this._focusLock.lock('[data-header]');
      if (window.ls) {
        window.ls.stop();
      }
    }
  }, {
    key: "_closeMenu",
    value: function _closeMenu() {
      this._isMenuOpen = false;
      this._header.classList.remove('is-open');
      this._scrollLock.enablePageScroll();
      this._focusLock.unlock('[data-header]');
      document.removeEventListener('keydown', this._onDocumentKeydown);
      document.removeEventListener('click', this._onDocumentClick);
      if (window.ls) {
        window.ls.start();
      }
    }
  }, {
    key: "_onBurgerClick",
    value: function _onBurgerClick() {
      if (this._isMenuOpen) {
        this._closeMenu();
      } else {
        this._openMenu();
      }
    }
  }, {
    key: "_onDocumentKeydown",
    value: function _onDocumentKeydown(evt) {
      if (evt.key === 'Escape') {
        this._closeMenu();
      }
    }
  }, {
    key: "_onDocumentClick",
    value: function _onDocumentClick(evt) {
      if (evt.target.hasAttribute('data-close-menu') || evt.target.hasAttribute('href')) {
        this._closeMenu();
      }
    }
  }]);
  return Burger;
}();

/***/ }),

/***/ "./js/modules/check-theme-header.js":
/*!******************************************!*\
  !*** ./js/modules/check-theme-header.js ***!
  \******************************************/
/*! exports provided: checkThemeHeader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkThemeHeader", function() { return checkThemeHeader; });
var checkThemeHeader = function checkThemeHeader() {
  var header = document.querySelector('[data-header]');
  if (!header) {
    return;
  }
  var special;
  if (header.classList.contains('header--special')) {
    special = true;
  }
  var checkTheme = function checkTheme() {
    if (document.documentElement.scrollTop > header.offsetHeight) {
      if (special) {
        header.classList.remove('header--special');
      }
      header.classList.add('header--shadow');
    } else {
      if (special) {
        header.classList.add('header--special');
      }
      header.classList.remove('header--shadow');
    }
  };
  window.addEventListener('scroll', checkTheme);
};


/***/ }),

/***/ "./js/modules/form/form-send-callbacks.js":
/*!************************************************!*\
  !*** ./js/modules/form/form-send-callbacks.js ***!
  \************************************************/
/*! exports provided: baseSendSuccess, baseSendError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "baseSendSuccess", function() { return baseSendSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "baseSendError", function() { return baseSendError; });
var baseSendSuccess = function baseSendSuccess(target) {
  window.clearForm(target);
  // eslint-disable-next-line no-console
  console.log('Ваша форма успешна отправлена');
  modals.open('success');
};
var baseSendError = function baseSendError() {
  // eslint-disable-next-line no-console
  console.error('Произошла ошибка отправки');
  modals.open('error');
};

/***/ }),

/***/ "./js/modules/form/form-validate.js":
/*!******************************************!*\
  !*** ./js/modules/form/form-validate.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return FormsValidate; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
// Константы и переменные

var BASE_COUNTRY_CODE = '+7';
var BASE_MATRIX = '(___) ___ __ __';
var phoneLength = BASE_COUNTRY_CODE.length + BASE_MATRIX.length;

// Ограничения ввода для обычных полей

var returnLimitationsRegEx = function returnLimitationsRegEx(dataLimitations) {
  switch (dataLimitations) {
    case 'digit':
      return /[^\d]/g;
    case 'name':
      return /[^a-zA-Zа-яёА-ЯЁ\-\s]/g;
    case 'letters':
      return /[^a-zA-Zа-яёА-ЯЁ\s]/g;
    case 'letters-and-digit':
      return /[^a-zA-Zа-яёА-ЯЁ\s\d]/g;
    case 'cyrillic':
      return /[^а-яёА-ЯЁ\s]/g;
    case 'latin':
      return /[^a-zA-Z\s]/g;
    default:
      return false;
  }
};
var simpleLimitations = function simpleLimitations(formElement, dataLimitations) {
  var RegEx = returnLimitationsRegEx(dataLimitations);
  if (RegEx) {
    formElement.addEventListener('input', function () {
      formElement.value = formElement.value.replace(RegEx, '');
    });
    return;
  }
  // eslint-disable-next-line no-console
  console.error("\u041F\u0435\u0440\u0435\u0434\u0430\u043D\u043D\u044B\u0439 \u0444\u043E\u0440\u043C\u0430\u0442 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u044F: ".concat(dataLimitations, ", \u043D\u0435 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044F. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u043E\u0441\u0442\u044C \u0432\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0445 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 \u0432 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\u043E \u0441\u043F\u0435\u0446\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0435\u0439."));
};

// Ограничения ввода для обычных полей с матрицей

var returnMatrixLimitationsRegEx = function returnMatrixLimitationsRegEx(dataMatrixLimitations) {
  switch (dataMatrixLimitations) {
    case 'digit':
      return /[^\d]/g;
    case 'name':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z\-]]/g;
    case 'letters':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z]/g;
    case 'letters-and-digit':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z\d]/g;
    case 'cyrillic':
      return /[^\а-яё\А-ЯЁ]/g;
    case 'latin':
      return /[^\a-z\A-Z]/g;
    default:
      return false;
  }
};
var initMatrixReplace = function initMatrixReplace(target, matrix, RegEx) {
  var def = matrix.replace(RegEx, '');
  var val = target.value.replace(RegEx, '');
  var i = 0;
  if (def.length >= val.length) {
    val = def;
  }
  target.value = matrix.replace(/./g, function (a) {
    if (/[_\^]/.test(a) && i < val.length) {
      return val.charAt(i++);
    } else if (i >= val.length) {
      return '';
    } else {
      return a;
    }
  });
};
var simpleMatrix = function simpleMatrix(formElement, dataMatrix, dataMatrixLimitations) {
  if (dataMatrixLimitations === null) {
    // eslint-disable-next-line no-console
    console.error('При валидации по матрице обязательно указывать формат ограничений: data-matrix-limitations=""');
    return;
  }
  var RegEx = returnMatrixLimitationsRegEx(dataMatrixLimitations);
  if (RegEx) {
    formElement.addEventListener('input', function () {
      initMatrixReplace(formElement, dataMatrix, RegEx);
    });
  } else {
    // eslint-disable-next-line no-console
    console.error("\u041F\u0435\u0440\u0435\u0434\u0430\u043D\u043D\u044B\u0439 \u0444\u043E\u0440\u043C\u0430\u0442 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u044F: ".concat(dataMatrixLimitations, ", \u043D\u0435 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044F. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u043E\u0441\u0442\u044C \u0432\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0445 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 \u0432 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\u043E \u0441\u043F\u0435\u0446\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0435\u0439."));
  }
};

// Маска для телефона

var onInputPhoneInput = function onInputPhoneInput(_ref) {
  var target = _ref.target;
  var matrix = "".concat(BASE_COUNTRY_CODE).concat(BASE_MATRIX);
  var def = matrix.replace(/\D/g, '');
  var i = 0;
  var val = target.value.replace(/\D/g, '');
  if (def.length >= val.length) {
    val = def;
  }
  target.value = matrix.replace(/./g, function (a) {
    if (/[_\d]/.test(a) && i < val.length) {
      return val.charAt(i++);
    } else if (i >= val.length) {
      return '';
    } else {
      return a;
    }
  });
};
var prettifyPhoneInput = function prettifyPhoneInput(input) {
  if (!input.value.startsWith(BASE_COUNTRY_CODE)) {
    if (input.value.startsWith('8')) {
      input.value = input.value.replace('8', BASE_COUNTRY_CODE);
    } else {
      input.value = "".concat(BASE_COUNTRY_CODE).concat(input.value);
    }
  }
  // onInputPhoneInput({input});
  var matrix = "".concat(BASE_COUNTRY_CODE).concat(BASE_MATRIX);
  var def = matrix.replace(/\D/g, '');
  var i = 0;
  var val = input.value.replace(/\D/g, '');
  if (def.length >= val.length) {
    val = def;
  }
  input.value = matrix.replace(/./g, function (a) {
    if (/[_\d]/.test(a) && i < val.length) {
      return val.charAt(i++);
    } else if (i >= val.length) {
      return '';
    } else {
      return a;
    }
  });
};
var onFocusPhoneInput = function onFocusPhoneInput(_ref2) {
  var target = _ref2.target;
  if (!target.value) {
    target.value = BASE_COUNTRY_CODE;
  }
  target.addEventListener('input', onInputPhoneInput);
  target.addEventListener('blur', onBlurPhoneInput);
  target.addEventListener('keydown', onKeydownPhoneInput);
};
var onKeydownPhoneInput = function onKeydownPhoneInput(e) {
  if (e.target.selectionStart === 1 && e.keyCode === 8 || e.keyCode === 46) {
    e.preventDefault();
  }
  if (e.target.selectionStart <= phoneLength && e.keyCode !== 8 && e.keyCode !== 46 && e.keyCode !== 37 && e.keyCode !== 39) {
    e.target.setSelectionRange(phoneLength, phoneLength);
  }
};
var onBlurPhoneInput = function onBlurPhoneInput(_ref3) {
  var target = _ref3.target;
  if (target.value === BASE_COUNTRY_CODE) {
    var parent = target.closest('[data-validate-type="phone"]');
    target.value = '';
    parent.classList.remove('not-empty');
    target.removeEventListener('input', onInputPhoneInput);
    target.removeEventListener('blur', onBlurPhoneInput);
  }
};

// Показ ошибок полей форм

var hideError = function hideError(el) {
  if (el.classList.contains('toggle-group')) {
    validateToggleGroup(el);
    el.setAttribute('aria-invalid', 'true');
    el.classList.remove('is-invalid');
    el.classList.add('is-valid');
  } else {
    var parent = el.closest('[data-validate-type]');
    el.setAttribute('aria-invalid', 'false');
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
  }
};
var showError = function showError(el) {
  if (el.classList.contains('toggle-group')) {
    validateToggleGroup(el);
    el.setAttribute('aria-invalid', 'false');
    el.classList.add('is-invalid');
    el.classList.remove('is-valid');
  } else {
    var parent = el.closest('[data-validate-type]');
    el.setAttribute('aria-invalid', 'true');
    parent.classList.add('is-invalid');
    parent.classList.remove('is-valid');
  }
};
var showInputsError = function showInputsError(inputs) {
  var flag = true;
  var result = true;
  inputs.forEach(function (input) {
    var type = input.closest('[data-validate-type]').dataset.validateType;
    if (type === 'toggle-group') {
      return;
    }
    flag = validateInputs(type, input);
    if (!flag) {
      result = flag;
      showError(input);
    } else {
      hideError(input);
    }
  });
  return result;
};
var showGroupInputsError = function showGroupInputsError(parents) {
  var flag = true;
  var result = true;
  if (!parents.length) {
    return result;
  }
  parents.forEach(function (parent) {
    flag = validateToggleGroup(parent);
    if (!flag) {
      result = flag;
      showError(parent);
    } else {
      hideError(parent);
    }
  });
  return result;
};
var showErrors = function showErrors(inputs, parents) {
  var result = true;
  var inputsResult = showInputsError(inputs);
  var groupResult = showGroupInputsError(parents);
  if (!inputsResult || !groupResult) {
    result = false;
  }
  return result;
};

// Валидация полей форм

var validateTextInput = function validateTextInput(input) {
  var parent = input.closest('[data-validate-type]');
  var flag = true;
  var minLength = +input.getAttribute('minlength');
  if (!minLength) {
    minLength = 1;
  }
  if (input.value.length >= minLength) {
    parent.classList.add('is-valid');
    parent.classList.remove('is-invalid');
    input.setAttribute('aria-invalid', 'false');
  } else {
    parent.classList.remove('is-valid');
    input.setAttribute('aria-invalid', 'true');
    flag = false;
  }
  return flag;
};
var validatePhoneInput = function validatePhoneInput(input) {
  var parent = input.closest('[data-validate-type]');
  var flag = true;
  if (input.value.length >= phoneLength) {
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
    input.setAttribute('aria-invalid', 'false');
  } else {
    parent.classList.remove('is-valid');
    input.setAttribute('aria-invalid', 'true');
    flag = false;
  }
  return flag;
};
var validateEmailInput = function validateEmailInput(input) {
  var parent = input.closest('[data-validate-type]');
  var flag = true;
  var emailString = /[a-zA-Zа-яёА-ЯЁ0-9]{1}([a-zA-Zа-яёА-ЯЁ0-9\-_\.]{1,})?@[a-zA-Zа-яёА-ЯЁ0-9\-]{1}([a-zA-Zа-яёА-ЯЁ0-9.\-]{1,})?[a-zA-Zа-яёА-ЯЁ0-9\-]{1}\.[a-zA-Zа-яёА-ЯЁ]{2,6}/;
  var regEmail = new RegExp(emailString, '');
  if (regEmail.test(input.value)) {
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
    input.setAttribute('aria-invalid', 'false');
  } else {
    parent.classList.remove('is-valid');
    input.setAttribute('aria-invalid', 'true');
    flag = false;
  }
  return flag;
};
var validateMatrixInput = function validateMatrixInput(input) {
  var parent = input.closest('[data-validate-type]');
  var flag = true;
  var matrix = input.closest('[data-matrix]').dataset.matrix;
  if (input.value.length === matrix.length) {
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
    input.setAttribute('aria-invalid', 'false');
  } else {
    parent.classList.remove('is-valid');
    input.setAttribute('aria-invalid', 'true');
    flag = false;
  }
  return flag;
};
var findSelectedOption = function findSelectedOption(options) {
  var flag = false;
  options.forEach(function (option) {
    if (option.value && option.selected) {
      flag = true;
    }
  });
  return flag;
};
var validateSelect = function validateSelect(input) {
  var parent = input.closest('[data-validate-type]');
  var options = input.querySelectorAll('option');
  var customSelectText = parent.querySelector('.custom-select__text');
  input.setAttribute('aria-invalid', 'false');
  var flag = true;
  if (findSelectedOption(options)) {
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
    input.setAttribute('aria-invalid', 'false');
  } else {
    parent.classList.remove('is-valid');
    input.setAttribute('aria-invalid', 'true');
    customSelectText.innerHTML = '';
    parent.classList.remove('not-empty');
    flag = false;
  }
  return flag;
};
var validateCheckbox = function validateCheckbox(input) {
  var parent = input.closest('[data-validate-type]');
  var flag = true;
  if (input.checked) {
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
  } else {
    parent.classList.remove('is-valid');
    flag = false;
  }
  return flag;
};
var validateFile = function validateFile(input) {
  var parent = input.closest('[data-validate-type]');
  var flag;
  if (!parent.hasAttribute('data-required') && !input.value) {
    input.setAttribute('aria-required', 'false');
    flag = true;
    return flag;
  }
  flag = true;
  var sizeTest = parent.dataset.maxSize && input.files[0] ? input.files[0].size < +parent.dataset.maxSize : true;
  if (input.value && sizeTest) {
    parent.classList.add('is-valid');
    parent.classList.remove('is-invalid');
    input.setAttribute('aria-invalid', 'false');
  } else {
    parent.classList.remove('is-valid');
    input.setAttribute('aria-invalid', 'true');
    input.setAttribute('aria-required', 'true');
    flag = false;
  }
  return flag;
};
var validateInputs = function validateInputs(type, input) {
  switch (type) {
    case 'text':
      return validateTextInput(input);
    case 'phone':
      return validatePhoneInput(input);
    case 'email':
      return validateEmailInput(input);
    case 'matrix':
      return validateMatrixInput(input);
    case 'select':
      return validateSelect(input);
    case 'checkbox':
      return validateCheckbox(input);
    case 'file':
      return validateFile(input);
    default:
      return false;
  }
};
var returnCheckedElements = function returnCheckedElements(inputs) {
  var flag = false;
  inputs.forEach(function (input) {
    if (input.checked) {
      flag = true;
    }
  });
  return flag;
};
var removeGroupAria = function removeGroupAria(inputs) {
  inputs.forEach(function (input) {
    if (!input.checked) {
      input.removeAttribute('aria-required');
      input.removeAttribute('aria-invalid');
    } else {
      input.setAttribute('aria-required', true);
      input.setAttribute('aria-invalid', false);
    }
  });
};
var setGroupAria = function setGroupAria(inputs) {
  inputs.forEach(function (input) {
    input.setAttribute('aria-required', true);
    input.setAttribute('aria-invalid', true);
  });
};
var validateToggleGroup = function validateToggleGroup(parent) {
  var formElements = parent.querySelectorAll('input');
  var flag = true;
  if (returnCheckedElements(formElements)) {
    removeGroupAria(formElements);
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
  } else {
    setGroupAria(formElements);
    parent.classList.remove('is-valid');
    flag = false;
  }
  return flag;
};
var checkInputValidity = function checkInputValidity(type, input) {
  validateInputs(type, input);
};

// Установка всех действий в полях форм

var formElementLimitationsAction = function formElementLimitationsAction(formValidateElement) {
  var dataLimitations = formValidateElement.dataset.limitations ? formValidateElement.dataset.limitations : null;
  var formElement = formValidateElement.querySelector('input');
  if (!formElement) {
    formElement = formValidateElement.querySelector('textarea');
  }
  if (!formElement) {
    // eslint-disable-next-line no-console
    console.error('В валидируемом блоке отсутствует поле формы');
    return;
  }
  if (dataLimitations) {
    simpleLimitations(formElement, dataLimitations);
  }
};
var formElementMatrixAction = function formElementMatrixAction(formValidateElement) {
  var dataMatrix = formValidateElement.dataset.matrix ? formValidateElement.dataset.matrix : null;
  var dataMatrixLimitations = formValidateElement.dataset.matrixLimitations ? formValidateElement.dataset.matrixLimitations : null;
  var formElement = formValidateElement.querySelector('input');
  if (!formElement) {
    formElement = formValidateElement.querySelector('textarea');
  }
  if (!formElement) {
    // eslint-disable-next-line no-console
    console.error('В валидируемом блоке отсутствует поле формы');
    return;
  }
  if (dataMatrix) {
    simpleMatrix(formElement, dataMatrix, dataMatrixLimitations);
  }
};
var formElementValidateAction = function formElementValidateAction(formValidateElement) {
  var dataValidateType = formValidateElement.dataset.validateType;
  var dataLimitations = formValidateElement.dataset.limitations ? formValidateElement.dataset.limitations : null;
  var dataMatrix = formValidateElement.dataset.matrix ? formValidateElement.dataset.matrix : null;
  var dataMatrixLimitations = formValidateElement.dataset.matrixLimitations ? formValidateElement.dataset.matrixLimitations : null;
  if (dataValidateType !== 'toggle-group') {
    var formElement = formValidateElement.querySelector('input');
    if (!formElement) {
      formElement = formValidateElement.querySelector('textarea');
    }
    if (!formElement) {
      formElement = formValidateElement.querySelector('select');
    }
    if (!formElement) {
      // eslint-disable-next-line no-console
      console.error('В валидируемом блоке отсутствует поле формы');
      return;
    }
    formElement.setAttribute('aria-required', true);
    formElement.setAttribute('aria-invalid', true);
    if (dataLimitations) {
      simpleLimitations(formElement, dataLimitations);
    }
    if (dataMatrix) {
      simpleMatrix(formElement, dataMatrix, dataMatrixLimitations);
    }
    if (dataValidateType === 'phone') {
      if (formElement.value) {
        prettifyPhoneInput(formElement);
      }
      formElement.addEventListener('focus', onFocusPhoneInput);
    }
    formElement.addEventListener('input', function () {
      checkInputValidity(dataValidateType, formElement);
    });
    checkInputValidity(dataValidateType, formElement);
  } else {
    var formElements = formValidateElement.querySelectorAll('input');
    if (formElements.length) {
      formElements.forEach(function (el) {
        el.setAttribute('aria-required', true);
        el.setAttribute('aria-invalid', true);
        el.addEventListener('input', function () {
          validateToggleGroup(formValidateElement);
        });
      });
      validateToggleGroup(formValidateElement);
    } else {
      // eslint-disable-next-line no-console
      console.error('В валидируемом блоке отсутствуют поля формы');
      return;
    }
  }
};

// Обработка события submit на форме

var onFormSubmit = function onFormSubmit(e, callback) {
  var formElements = e.target.querySelectorAll('[aria-required="true"]');
  var groupsFormElement = e.target.querySelectorAll('[data-validate-type="toggle-group"]');
  if (showErrors(formElements, groupsFormElement) && callback && callback.validationSuccessCallback) {
    callback.validationSuccessCallback(e);
  } else if (callback && callback.validationErrorCallback) {
    callback.validationErrorCallback(e);
  } else {
    e.preventDefault();
  }
};

// Очистка полей формы

var clearForm = function clearForm(form) {
  form.reset();
  var formValidateElements = form.querySelectorAll('[data-validate-type]');
  var notEmptyInputs = form.querySelectorAll('.not-empty');
  var invalidInputs = form.querySelectorAll('.is-invalid');
  notEmptyInputs.forEach(function (notEmptyInput) {
    notEmptyInput.classList.remove('not-empty');
  });
  invalidInputs.forEach(function (invalidInput) {
    invalidInput.classList.remove('is-invalid');
  });
  formValidateElements.forEach(function (formValidateElement) {
    var dataValidateType = formValidateElement.dataset.validateType;
    if (dataValidateType !== 'toggle-group') {
      var formElement = formValidateElement.querySelector('input');
      if (!formElement) {
        formElement = formValidateElement.querySelector('textarea');
      }
      if (!formElement) {
        formElement = formValidateElement.querySelector('select');
      }
      if (!formElement) {
        // eslint-disable-next-line no-console
        console.error('В валидируемом блоке отсутствует поле формы');
        return;
      }
      formElement.value = '';
      checkInputValidity(dataValidateType, formElement);
    } else {
      validateToggleGroup(formValidateElement);
    }
  });
};
window.clearForm = clearForm;

// Класс FormsValidate
var FormsValidate = /*#__PURE__*/function () {
  function FormsValidate(wrappers) {
    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    _classCallCheck(this, FormsValidate);
    this.wrappers = wrappers;
    this.callback = callback;
  }
  _createClass(FormsValidate, [{
    key: "init",
    value: function init(formWrappers) {
      var _this = this;
      if (!formWrappers) {
        formWrappers = this.wrappers;
      }
      var typeOfNode = Object.prototype.toString.call(formWrappers);
      if (typeOfNode === '[object HTMLCollection]' || typeOfNode === '[object NodeList]' || typeOfNode === '[object Array]') {
        formWrappers.forEach(function (wrapper) {
          if (wrapper.classList.contains('is-initialized')) {
            // eslint-disable-next-line no-console
            console.error('На данной форме валидация уже инициализированна');
          } else {
            _this.initItem(wrapper);
          }
        });
      } else if (typeOfNode === '[object HTMLDivElement]' || typeOfNode === '[object HTMLElement]') {
        if (!formWrappers.classList.contains('is-initialized')) {
          this.initItem(formWrappers);
        }
      } else {
        // eslint-disable-next-line no-console
        console.error('Переданный обьект не соответствует формату');
        return;
      }
    }
  }, {
    key: "initItem",
    value: function initItem(element) {
      var _this2 = this;
      element.classList.add('is-initialized');
      var form = element.querySelector('form');
      var resetButtons = form.querySelectorAll('button[type="reset"], [data-reset]');
      form.noValidate = true;
      form.addEventListener('submit', function (e) {
        onFormSubmit(e, _this2.callback);
      });
      if (resetButtons.length) {
        resetButtons.forEach(function (btn) {
          btn.addEventListener('click', function (e) {
            e.preventDefault();
            clearForm(form);
          });
        });
      }
      var formValidateElements = form.querySelectorAll('[data-validate-type]');
      var formLimitationsElements = form.querySelectorAll('[data-limitations]:not([data-validate-type])');
      var formMatrixElements = form.querySelectorAll('[data-matrix]:not([data-validate-type])');
      if (formValidateElements.length) {
        formValidateElements.forEach(function (el) {
          formElementValidateAction(el);
        });
      }
      if (formLimitationsElements.length) {
        formLimitationsElements.forEach(function (el) {
          formElementLimitationsAction(el);
        });
      }
      if (formMatrixElements.length) {
        formMatrixElements.forEach(function (el) {
          formElementMatrixAction(el);
        });
      }
    }
  }]);
  return FormsValidate;
}();

window.FormsValidate = FormsValidate;

/***/ }),

/***/ "./js/modules/form/init-form-validate.js":
/*!***********************************************!*\
  !*** ./js/modules/form/init-form-validate.js ***!
  \***********************************************/
/*! exports provided: initFormValidate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initFormValidate", function() { return initFormValidate; });
/* harmony import */ var _form_validate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./form-validate */ "./js/modules/form/form-validate.js");
/* harmony import */ var _send_mail__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./send-mail */ "./js/modules/form/send-mail.js");
/* harmony import */ var _form_send_callbacks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./form-send-callbacks */ "./js/modules/form/form-send-callbacks.js");



var formWrappers = document.querySelectorAll('[data-validate]');
var sendUrl = 'callback.php';
var baseValidationSuccessCallback = function baseValidationSuccessCallback(evt) {
  evt.preventDefault();
  var url = evt.target.getAttribute('action') || sendUrl;
  Object(_send_mail__WEBPACK_IMPORTED_MODULE_1__["sendMail"])(url, _form_send_callbacks__WEBPACK_IMPORTED_MODULE_2__["baseSendSuccess"], _form_send_callbacks__WEBPACK_IMPORTED_MODULE_2__["baseSendError"], new FormData(evt.target), evt.target);
};
var baseValidationErrorCallback = function baseValidationErrorCallback(evt) {
  evt.preventDefault();
};
var customExampleValidationSuccessCallback = function customExampleValidationSuccessCallback(evt) {
  evt.preventDefault();
  window.clearForm(evt.target);
  // eslint-disable-next-line no-console
  console.log('Ваша форма успешна отправлена');
};
var customExampleValidationErrorCallback = function customExampleValidationErrorCallback(e) {
  e.preventDefault();
  // eslint-disable-next-line no-console
  console.error('Отправка формы невозможна, заполните все обязательные поля');
};
var callbacks = {
  base: {
    validationSuccessCallback: baseValidationSuccessCallback,
    validationErrorCallback: baseValidationErrorCallback
  },
  customExample: {
    validationSuccessCallback: customExampleValidationSuccessCallback,
    validationErrorCallback: customExampleValidationErrorCallback
  }
};
var setCustomPhoneInputsEvent = function setCustomPhoneInputsEvent() {
  if (document.querySelectorAll('[data-validate-type="phone"] input').length) {
    document.querySelector('html').addEventListener('input', function (_ref) {
      var target = _ref.target;
      if (target.closest('[data-validate-type="phone"]')) {
        target.closest('[data-validate-type="phone"]').querySelector('input').dispatchEvent(new Event('input'));
      }
    });
  }
};
var initFormValidate = function initFormValidate() {
  if (formWrappers.length) {
    setCustomPhoneInputsEvent();
    formWrappers.forEach(function (wrapper) {
      var callback = wrapper.dataset.callback;
      if (!callback) {
        callback = 'base';
      }
      var formValidate = new _form_validate__WEBPACK_IMPORTED_MODULE_0__["default"](wrapper, callbacks[callback]);
      return formValidate.init();
    });
  }
};


/***/ }),

/***/ "./js/modules/form/send-mail.js":
/*!**************************************!*\
  !*** ./js/modules/form/send-mail.js ***!
  \**************************************/
/*! exports provided: sendMail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sendMail", function() { return sendMail; });
var sendMail = function sendMail(url, onSuccess, onError, data, target) {
  fetch(url, {
    method: 'POST',
    body: data
  }).then(function (response) {
    if (response.ok) {
      onSuccess(target);
      return;
    }
    throw new Error();
  }).catch(function (err) {
    onError(err, target);
  });
};

/***/ }),

/***/ "./js/modules/init-animate-count.js":
/*!******************************************!*\
  !*** ./js/modules/init-animate-count.js ***!
  \******************************************/
/*! exports provided: initAnimateCount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initAnimateCount", function() { return initAnimateCount; });
/* harmony import */ var _scroll_trigger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scroll-trigger */ "./js/modules/scroll-trigger.js");
/* harmony import */ var _animate_count__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./animate-count */ "./js/modules/animate-count.js");
/* harmony import */ var _user_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./user-data */ "./js/modules/user-data.js");



var initAnimateCount = function initAnimateCount() {
  var digitalAchievements = document.querySelector('[data-digital-achievements]');
  if (!digitalAchievements) {
    return;
  }
  var digitalItems = Array.from(digitalAchievements.querySelectorAll('[data-digital-item]'));
  digitalItems.forEach(function (item, index) {
    return Object(_scroll_trigger__WEBPACK_IMPORTED_MODULE_0__["scrollTrigger"])(item, {
      rootMargin: '-8%',
      cb: function cb(item) {
        return Object(_animate_count__WEBPACK_IMPORTED_MODULE_1__["animateCount"])(item, _user_data__WEBPACK_IMPORTED_MODULE_2__["countData"][index]);
      }
    });
  });
};


/***/ }),

/***/ "./js/modules/init-map.js":
/*!********************************!*\
  !*** ./js/modules/init-map.js ***!
  \********************************/
/*! exports provided: initYM */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initYM", function() { return initYM; });
var initYM = function initYM() {
  var map = document.querySelector('#map');
  if (!map) {
    return;
  }
  ymaps.ready(function () {
    var myMap = new ymaps.Map('map', {
      center: [55.65996509305779, 37.543971082104704],
      zoom: 16,
      controls: []
    }, {
      suppressMapOpenBlock: true
    });
    var myPlacemark = new ymaps.Placemark([55.661862, 37.546561], {
      hintContent: 'ApiSoft',
      balloonContent: 'Профсоюзная улица, 57'
    }, {
      iconLayout: 'default#image',
      iconImageHref: 'img/content/pin-map.png',
      iconImageSize: [30, 30],
      iconImageOffset: [-15, -30]
    });
    myMap.geoObjects.add(myPlacemark);
  });
};


/***/ }),

/***/ "./js/modules/init-move-to.js":
/*!************************************!*\
  !*** ./js/modules/init-move-to.js ***!
  \************************************/
/*! exports provided: initMoveTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initMoveTo", function() { return initMoveTo; });
/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/utils */ "./js/utils/utils.js");

var links = document.querySelectorAll('[data-trigger]');
var getDuration = function getDuration(distance, step) {
  var defaultDuration = 500;
  var durationIncrement = 100;
  var count = Math.round(Math.abs(distance) / step);
  return defaultDuration + durationIncrement * count;
};
var initMoveTo = function initMoveTo() {
  if (!links.length) {
    return;
  }
  links.forEach(function (link) {
    link.addEventListener('click', function (evt) {
      evt.preventDefault();
      document.activeElement.blur();
      var header = document.querySelector('.header');
      var target = document.querySelector('#' + link.href.split('#')[1]);
      var targetTopPosition = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__["getElTop"])(target);
      var linkTopPosition = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__["getElTop"])(link);
      var distance = targetTopPosition - linkTopPosition;
      var moveTo = new window.MoveTo({
        tolerance: header.clientHeight,
        duration: getDuration(distance, 300),
        easing: 'easeOutQuart',
        container: window
      });
      moveTo.move(target);
    });
  });
};


/***/ }),

/***/ "./js/modules/init-stages-project-slider.js":
/*!**************************************************!*\
  !*** ./js/modules/init-stages-project-slider.js ***!
  \**************************************************/
/*! exports provided: initStagesProjectSlider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initStagesProjectSlider", function() { return initStagesProjectSlider; });
var breakpoint = window.matchMedia('(max-width:479px)');
var sliderStagesProject = document.querySelector('.project-stages__content');
var swiper;
var initSwiper = function initSwiper(slider) {
  // eslint-disable-next-line no-undef

  swiper = new Swiper(slider, {
    direction: "vertical",
    slidesPerView: 1,
    spaceBetween: 14
  });
  var controlsStages = Array.from(document.querySelectorAll('.project-stages__control'));
  var onClickControlStage = function onClickControlStage(evt) {
    var indexButton = evt.target.closest('button').getAttribute('data-stage');
    swiper.slideTo(indexButton, 800);
  };
  controlsStages.forEach(function (item) {
    item.addEventListener('click', onClickControlStage);
  });
  var setActiveClass = function setActiveClass() {
    var index = swiper.activeIndex;
    controlsStages.forEach(function (item) {
      return item.classList.remove('is-active');
    });
    controlsStages[index].classList.add('is-active');
  };
  swiper.on('realIndexChange', setActiveClass);
};
var initStagesProjectSlider = function initStagesProjectSlider() {
  if (!sliderStagesProject) {
    return;
  }
  var breakpointChecker = function breakpointChecker() {
    if (breakpoint.matches) {
      if (swiper) {
        swiper.destroy(true, true);
      }
    } else {
      initSwiper(sliderStagesProject);
    }
  };
  breakpoint.addListener(breakpointChecker);
  breakpointChecker();
};


/***/ }),

/***/ "./js/modules/input-file/create-message-markup.js":
/*!********************************************************!*\
  !*** ./js/modules/input-file/create-message-markup.js ***!
  \********************************************************/
/*! exports provided: createMessageMarkup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMessageMarkup", function() { return createMessageMarkup; });
var createMessageMarkup = function createMessageMarkup(message) {
  return "<div class=\"input-upload__message\">".concat(message, "</div>");
};

/***/ }),

/***/ "./js/modules/input-file/create-preview-container-markup.js":
/*!******************************************************************!*\
  !*** ./js/modules/input-file/create-preview-container-markup.js ***!
  \******************************************************************/
/*! exports provided: createPreviewContainerMarkup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPreviewContainerMarkup", function() { return createPreviewContainerMarkup; });
var createPreviewContainerMarkup = function createPreviewContainerMarkup() {
  return '<div class="input-upload__preview"></div>';
};

/***/ }),

/***/ "./js/modules/input-file/create-preview-markup.js":
/*!********************************************************!*\
  !*** ./js/modules/input-file/create-preview-markup.js ***!
  \********************************************************/
/*! exports provided: createPreviewMarkup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPreviewMarkup", function() { return createPreviewMarkup; });
/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helper */ "./js/modules/input-file/helper.js");

var createPreviewMarkup = function createPreviewMarkup(file, event, options, error) {
  var nameArray = file.name.split('.');
  var expansion = nameArray[nameArray.length - 1];
  var hasErrorClass = error ? ' is-invalid' : '';
  return "<div class=\"input-upload__preview-item".concat(hasErrorClass, "\">\n            <button class=\"input-upload__preview-item-remove\" type=\"button\" data-file-name=\"").concat(file.name, "\">&times;</button>\n            ").concat(options.previewImg ? "<img class=\"input-upload__preview-img\" src=\"".concat(event.target.result, "\" alt=\"").concat(file.name, "\" />") : '', "\n            ").concat(options.iconFormat ? "<img class=\"input-upload__preview-icon\" src=\"".concat(options.iconFormat[expansion] ? options.iconFormat[expansion] : options.iconFormat.default, "\" alt=\"\" />") : '', "\n            ").concat(options.fileInfo ? "<div class=\"input-upload__preview-file-info\"\" />\n              ".concat(options.fileInfo.fileName ? "<span class=\"input-upload__preview-file-name\"\" />\n                ".concat(file.name, "\n              </span>") : '', "\n              ").concat(options.fileInfo.fileSize ? "<span class=\"input-upload__preview-file-size\"\" />\n                ".concat(Object(_helper__WEBPACK_IMPORTED_MODULE_0__["bytesToSize"])(file.size), "\n              </span>") : '', "\n            </div>") : '', "\n          </div>");
};

/***/ }),

/***/ "./js/modules/input-file/helper.js":
/*!*****************************************!*\
  !*** ./js/modules/input-file/helper.js ***!
  \*****************************************/
/*! exports provided: bytesToSize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bytesToSize", function() { return bytesToSize; });
var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
var bytesToSize = function bytesToSize(bytes) {
  if (!bytes) {
    return '0 Byte';
  }
  var index = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)), 10);
  return "".concat(Math.round(bytes / Math.pow(1024, index)), " ").concat(sizes[index]);
};

/***/ }),

/***/ "./js/modules/input-file/init-upload.js":
/*!**********************************************!*\
  !*** ./js/modules/input-file/init-upload.js ***!
  \**********************************************/
/*! exports provided: initUpload */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initUpload", function() { return initUpload; });
/* harmony import */ var _upload_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./upload.js */ "./js/modules/input-file/upload.js");

var uploadFileDropBlocks = document.querySelectorAll('[data-upload="file-drop"]');
var initUpload = function initUpload() {
  if (!uploadFileDropBlocks.length) {
    return;
  }
  uploadFileDropBlocks.forEach(function (item) {
    new _upload_js__WEBPACK_IMPORTED_MODULE_0__["Upload"](item, {
      uploadLength: 5,
      dropZone: true,
      maxFileSize: 10485760,
      accept: ['.pdf', '.docx', '.xlsx', 'doc', 'rtf', 'xls', 'zip', 'rar', 'jpg', 'png'],
      iconFormat: {
        xlsx: './img/file/icon-file-xlsx.png',
        docx: './img/file/icon-file-docx.png',
        pdf: './img/file/icon-file-pdf.png',
        default: './img/file/icon-file-docx.png'
      },
      fileInfo: {
        fileName: true,
        fileSize: true
      },
      // emptyMessage: 'Добавление файла обязательно',
      errorMessage: 'Выделенные файлы превышают максимальный размер в 10 Мегабайт'
    });
  });
};

/***/ }),

/***/ "./js/modules/input-file/render.js":
/*!*****************************************!*\
  !*** ./js/modules/input-file/render.js ***!
  \*****************************************/
/*! exports provided: createElement, renderElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createElement", function() { return createElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderElement", function() { return renderElement; });
var createElement = function createElement(template) {
  var newElement = document.createElement('div');
  newElement.innerHTML = template;
  return newElement.firstChild;
};
var renderElement = function renderElement(container, component) {
  var place = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'beforeend';
  switch (place) {
    case 'beforebegin':
      container.before(component);
      break;
    case 'afterbegin':
      container.prepend(component);
      break;
    case 'beforeend':
      container.append(component);
      break;
    case 'afterend':
      container.after(component);
      break;
  }
};

/***/ }),

/***/ "./js/modules/input-file/upload.js":
/*!*****************************************!*\
  !*** ./js/modules/input-file/upload.js ***!
  \*****************************************/
/*! exports provided: Upload */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Upload", function() { return Upload; });
/* harmony import */ var _render__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render */ "./js/modules/input-file/render.js");
/* harmony import */ var _create_preview_container_markup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create-preview-container-markup */ "./js/modules/input-file/create-preview-container-markup.js");
/* harmony import */ var _create_message_markup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./create-message-markup */ "./js/modules/input-file/create-message-markup.js");
/* harmony import */ var _create_preview_markup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./create-preview-markup */ "./js/modules/input-file/create-preview-markup.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }




var Upload = /*#__PURE__*/function () {
  function Upload(uploadBlock) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    _classCallCheck(this, Upload);
    this._uploadBlock = uploadBlock;
    if (!this._uploadBlock) {
      return;
    }
    this._options = options;
    this._formParent = this._uploadBlock.closest('form');
    this._maxFileSize = this._options.maxFileSize ? this._options.maxFileSize : false;
    this._maxFullSize = this._options.maxFullSize ? this._options.maxFullSize : false;
    this._dropZone = this._options.dropZone ? this._options.dropZone : false;
    this._renderPreview = this._options.preview ? this._options.preview : false;
    this._uploadLength = this._options.uploadLength ? this._options.uploadLength : 1;
    this._accept = this._options.accept ? this._options.accept : false;
    this._emptyMessage = this._options.emptyMessage ? this._options.emptyMessage : false;
    this._errorMessage = this._options.errorMessage ? this._options.errorMessage : false;
    this._successMessage = this._options.successMessage ? this._options.successMessage : false;
    this._input = this._uploadBlock.querySelector('input');
    this._dropZoneBlock = this._dropZone ? this._uploadBlock.querySelector('[data-drop-zone]') : false;
    this._previewBlock = null;
    this._files = [];
    this._message = null;
    this._onDropZoneBlockDragover = this._onDropZoneBlockDragover.bind(this);
    this._onDropZoneBlockDragenter = this._onDropZoneBlockDragenter.bind(this);
    this._onDropZoneBlockDragleave = this._onDropZoneBlockDragleave.bind(this);
    this._onDropZoneBlockDrop = this._onDropZoneBlockDrop.bind(this);
    this._onDropZoneBlockClick = this._onDropZoneBlockClick.bind(this);
    this._onInputChange = this._onInputChange.bind(this);
    this._onPreviewBlockClick = this._onPreviewBlockClick.bind(this);
    this._onFormParentReset = this._onFormParentReset.bind(this);
    this._onFormParentSubmit = this._onFormParentSubmit.bind(this);
    this._init();
  }
  _createClass(Upload, [{
    key: "_overwriteFileList",
    value: function _overwriteFileList() {
      var dataTransfer = new DataTransfer();
      this._files.forEach(function (file) {
        return dataTransfer.items.add(file);
      });
      this._input.files = dataTransfer.files;
    }
  }, {
    key: "_changeDropZoneBlock",
    value: function _changeDropZoneBlock() {
      if (this._files.length) {
        this._dropZoneBlock.classList.add('not-empty');
        return;
      }
      this._dropZoneBlock.classList.remove('not-empty');
    }
  }, {
    key: "_checkAccept",
    value: function _checkAccept(file) {
      var flag = false;
      this._accept.forEach(function (item) {
        if (file.name.endsWith(item)) {
          flag = true;
        }
      });
      return flag;
    }
  }, {
    key: "_renderMessage",
    value: function _renderMessage(message) {
      if (this._message) {
        this._message.remove();
      }
      this._message = Object(_render__WEBPACK_IMPORTED_MODULE_0__["createElement"])(Object(_create_message_markup__WEBPACK_IMPORTED_MODULE_2__["createMessageMarkup"])(message));
      Object(_render__WEBPACK_IMPORTED_MODULE_0__["renderElement"])(this._uploadBlock, this._message);
    }
  }, {
    key: "_renderFiles",
    value: function _renderFiles() {
      var _this = this;
      var error = false;
      if (this._accept) {
        this._files = this._files.filter(function (file) {
          return _this._checkAccept(file);
        });
      }
      this._overwriteFileList();
      error = this._maxFullSize ? this._checkFullSize(this._files) > this._maxFullSize : false;
      if (this._previewBlock) {
        this._previewBlock.innerHTML = '';
      }
      if (this._dropZoneBlock) {
        this._changeDropZoneBlock();
      }
      this._files.forEach(function (file) {
        var fileSizeError = _this._maxFileSize ? file.size > _this._maxFileSize : false;
        if (fileSizeError) {
          error = true;
        }
        var reader = new FileReader();
        if (_this._previewBlock) {
          reader.addEventListener('load', function (readerEvent) {
            Object(_render__WEBPACK_IMPORTED_MODULE_0__["renderElement"])(_this._previewBlock, Object(_render__WEBPACK_IMPORTED_MODULE_0__["createElement"])(Object(_create_preview_markup__WEBPACK_IMPORTED_MODULE_3__["createPreviewMarkup"])(file, readerEvent, _this._options, fileSizeError)));
          });
        }
        reader.readAsDataURL(file);
      });
      if (error) {
        this._uploadBlock.classList.add('is-invalid');
        if (this._errorMessage) {
          this._renderMessage(this._errorMessage);
        }
      } else {
        this._uploadBlock.classList.remove('is-invalid');
        if (this._message) {
          this._message.remove();
          this._message = null;
        }
      }
    }
  }, {
    key: "_checkFullSize",
    value: function _checkFullSize(array) {
      var fullSize = 0;
      array.forEach(function (item) {
        fullSize += item.size;
      });
      return fullSize;
    }
  }, {
    key: "reset",
    value: function reset() {
      this._uploadBlock.classList.remove('is-invalid');
      this._uploadBlock.classList.remove('is-valid');
      if (this._dropZoneBlock) {
        this._dropZoneBlock.classList.remove('not-empty');
      }
      this._uploadBlock.querySelectorAll('.is-invalid').forEach(function (item) {
        return item.classList.remove('is-invalid');
      });
      this._uploadBlock.querySelectorAll('.is-valid').forEach(function (item) {
        return item.classList.remove('is-valid');
      });
      this._files = [];
      if (this._previewBlock) {
        this._previewBlock.innerHTML = '';
      }
      if (this._message) {
        this._message.remove();
        this._message = null;
      }
    }
  }, {
    key: "_onFormParentReset",
    value: function _onFormParentReset() {
      this.reset();
    }
  }, {
    key: "_onFormParentSubmit",
    value: function _onFormParentSubmit() {
      if (!this._files.length && this._emptyMessage) {
        this._renderMessage(this._emptyMessage);
      }
    }
  }, {
    key: "_onPreviewBlockClick",
    value: function _onPreviewBlockClick(event) {
      if (!event.target.dataset.fileName) {
        return;
      }
      var name = event.target.dataset.fileName;
      this._files = this._files.filter(function (file) {
        return file.name !== name;
      });
      this._overwriteFileList();
      this._previewBlock.querySelector("[data-file-name=\"".concat(name, "\"]")).parentElement.remove();
      if (this._dropZoneBlock) {
        this._changeDropZoneBlock();
      }
      var fullSizeError = this._maxFullSize ? this._checkFullSize(this._files) > this._maxFullSize : false;
      if (fullSizeError) {
        this._uploadBlock.classList.add('is-invalid');
        if (this._errorMessage) {
          this._renderMessage(this._errorMessage);
        }
      } else {
        this._uploadBlock.classList.remove('is-invalid');
        if (this._message) {
          this._message.remove();
          this._message = null;
        }
      }
    }
  }, {
    key: "_onDropZoneBlockClick",
    value: function _onDropZoneBlockClick(event) {
      if (event.target.dataset.fileName || event.target.closest('.input-upload__preview')) {
        return;
      }
      this._input.click();
    }
  }, {
    key: "_onDropZoneBlockDragover",
    value: function _onDropZoneBlockDragover(event) {
      event.preventDefault();
      if (this._dropZoneBlock.classList.contains('is-drag')) {
        return;
      }
      this._dropZoneBlock.classList.add('is-drag');
    }
  }, {
    key: "_onDropZoneBlockDragenter",
    value: function _onDropZoneBlockDragenter(event) {
      event.preventDefault();
      if (!this._dropZoneBlock.classList.contains('is-drag')) {
        return;
      }
      this._dropZoneBlock.classList.remove('is-drag');
    }
  }, {
    key: "_onDropZoneBlockDragleave",
    value: function _onDropZoneBlockDragleave(event) {
      event.preventDefault();
      if (!this._dropZoneBlock.classList.contains('is-drag')) {
        return;
      }
      this._dropZoneBlock.classList.remove('is-drag');
    }
  }, {
    key: "_onDropZoneBlockDrop",
    value: function _onDropZoneBlockDrop(event) {
      event.preventDefault();
      this._dropZoneBlock.classList.remove('is-drag');
      if (!event.dataTransfer.files.length) {
        return;
      }
      this._files = [].concat(_toConsumableArray(this._files), _toConsumableArray(event.dataTransfer.files)).slice(0, this._uploadLength);
      this._renderFiles();
    }
  }, {
    key: "_onInputChange",
    value: function _onInputChange(event) {
      if (!event.target.files.length) {
        return;
      }
      this._files = [].concat(_toConsumableArray(this._files), _toConsumableArray(event.target.files)).slice(0, this._uploadLength);
      this._renderFiles();
    }
  }, {
    key: "_init",
    value: function _init() {
      this._input.addEventListener('change', this._onInputChange);
      if (this._uploadLength > 1) {
        this._input.setAttribute('multiple', '');
      }
      if (this._accept) {
        this._input.setAttribute('accept', this._accept);
      }
      if (this._dropZoneBlock) {
        this._previewBlock = Object(_render__WEBPACK_IMPORTED_MODULE_0__["createElement"])(Object(_create_preview_container_markup__WEBPACK_IMPORTED_MODULE_1__["createPreviewContainerMarkup"])(this._options));
        this._previewBlock.addEventListener('click', this._onPreviewBlockClick);
        this._dropZoneBlock.addEventListener('dragover', this._onDropZoneBlockDragover);
        this._dropZoneBlock.addEventListener('dragenter', this._onDropZoneBlockDragenter);
        this._dropZoneBlock.addEventListener('dragleave', this._onDropZoneBlockDragleave);
        this._dropZoneBlock.addEventListener('drop', this._onDropZoneBlockDrop);
        this._dropZoneBlock.addEventListener('click', this._onDropZoneBlockClick);
        Object(_render__WEBPACK_IMPORTED_MODULE_0__["renderElement"])(this._dropZoneBlock, this._previewBlock);
      }
      if (this._renderPreview) {
        this._previewBlock = Object(_render__WEBPACK_IMPORTED_MODULE_0__["createElement"])(Object(_create_preview_container_markup__WEBPACK_IMPORTED_MODULE_1__["createPreviewContainerMarkup"])(this._options));
        this._previewBlock.addEventListener('click', this._onPreviewBlockClick);
        Object(_render__WEBPACK_IMPORTED_MODULE_0__["renderElement"])(this._uploadBlock, this._previewBlock);
      }
      if (this._formParent) {
        this._formParent.addEventListener('reset', this._onFormParentReset);
        this._formParent.addEventListener('submit', this._onFormParentSubmit);
      }
    }
  }]);
  return Upload;
}();

/***/ }),

/***/ "./js/modules/modals/init-modals.js":
/*!******************************************!*\
  !*** ./js/modules/modals/init-modals.js ***!
  \******************************************/
/*! exports provided: modals, initModals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modals", function() { return modals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initModals", function() { return initModals; });
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modals */ "./js/modules/modals/modals.js");

var modals;

// Здесь реализован пример открытия модалки через колбэк закрытия
// const openModalInCloseCallback = (name, context = this) => {
//   context._enableScrolling = false;
//   context._setSettings('default');
//   modals.open(name);
// };

// closeCallback() {
//   openModalInCloseCallback('modal-5');
// },

var settings = {
  'default': {
    preventDefault: true,
    stopPlay: true,
    lockFocus: true,
    startFocus: true,
    focusBack: true,
    eventTimeout: 400,
    openCallback: false,
    closeCallback: false
  }
};
var initModals = function initModals() {
  var modalElements = document.querySelectorAll('.modal');
  if (modalElements.length) {
    modalElements.forEach(function (el) {
      setTimeout(function () {
        el.classList.remove('modal--preload');
      }, 100);
    });
  }
  modals = new _modals__WEBPACK_IMPORTED_MODULE_0__["Modals"](settings);
  // Используйте в разработке экспортируемую переменную modals, window сделан для бэкэнда
  window.modals = modals;
};


/***/ }),

/***/ "./js/modules/modals/modals.js":
/*!*************************************!*\
  !*** ./js/modules/modals/modals.js ***!
  \*************************************/
/*! exports provided: Modals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Modals", function() { return Modals; });
/* harmony import */ var _vendor_scroll_lock_min__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vendor/scroll-lock.min */ "./js/vendor/scroll-lock.min.js");
/* harmony import */ var _vendor_scroll_lock_min__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_vendor_scroll_lock_min__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/focus-lock */ "./js/utils/focus-lock.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var Modals = /*#__PURE__*/function () {
  function Modals() {
    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    _classCallCheck(this, Modals);
    this._scrollLock = _vendor_scroll_lock_min__WEBPACK_IMPORTED_MODULE_0___default.a;
    this._focusLock = new _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__["FocusLock"]();
    this._modalOpenElements = document.querySelectorAll('[data-open-modal]');
    this._stackModalElements = [];
    this._openedModalElement = null;
    this._modalName = null;
    this._enableScrolling = true;
    this._settingKey = 'default';
    this._settings = settings;
    this._preventDefault = this._settings[this._settingKey].preventDefault;
    this._stopPlay = this._settings[this._settingKey].stopPlay;
    this._lockFocus = this._settings[this._settingKey].lockFocus;
    this._startFocus = this._settings[this._settingKey].startFocus;
    this._focusBack = this._settings[this._settingKey].focusBack;
    this._eventTimeout = this._settings[this._settingKey].eventTimeout;
    this._resetScrollPos = this._settings[this._settingKey].resetScrollPos;
    this._openCallback = this._settings[this._settingKey].openCallback;
    this._closeCallback = this._settings[this._settingKey].closeCallback;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._modalClickHandler = this._modalClickHandler.bind(this);
    this._init();
  }
  _createClass(Modals, [{
    key: "_init",
    value: function _init() {
      if (this._modalOpenElements.length) {
        document.addEventListener('click', this._documentClickHandler);
      }
    }
  }, {
    key: "_setSettings",
    value: function _setSettings() {
      var settingKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._settingKey;
      if (!this._settings[settingKey]) {
        return;
      }
      this._preventDefault = typeof this._settings[settingKey].preventDefault === 'boolean' ? this._settings[settingKey].preventDefault : this._settings[this._settingKey].preventDefault;
      this._stopPlay = typeof this._settings[settingKey].stopPlay === 'boolean' ? this._settings[settingKey].stopPlay : this._settings[this._settingKey].stopPlay;
      this._lockFocus = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].lockFocus : this._settings[this._settingKey].lockFocus;
      this._startFocus = typeof this._settings[settingKey].startFocus === 'boolean' ? this._settings[settingKey].startFocus : this._settings[this._settingKey].startFocus;
      this._focusBack = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].focusBack : this._settings[this._settingKey].focusBack;
      this._resetScrollPos = typeof this._settings[settingKey].resetScrollPos === 'boolean' ? this._settings[settingKey].resetScrollPos : this._settings[this._settingKey].resetScrollPos;
      this._eventTimeout = typeof this._settings[settingKey].eventTimeout === 'number' ? this._settings[settingKey].eventTimeout : this._settings[this._settingKey].eventTimeout;
      this._openCallback = this._settings[settingKey].openCallback || this._settings[this._settingKey].openCallback;
      this._closeCallback = this._settings[settingKey].closeCallback || this._settings[this._settingKey].closeCallback;
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-open-modal]')) {
        return;
      }
      evt.preventDefault();
      this._modalName = target.closest('[data-open-modal]').dataset.openModal;
      if (!this._modalName) {
        return;
      }
      this.open();
    }
  }, {
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var isEscKey = evt.key === 'Escape' || evt.key === 'Esc';
      if (isEscKey) {
        evt.preventDefault();
        this.close(document.querySelector('.modal.is-active').dataset.modal);
      }
    }
  }, {
    key: "_modalClickHandler",
    value: function _modalClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-close-modal]')) {
        return;
      }
      if (target.closest('[data-close-modal="back"]')) {
        this.back();
      } else {
        this.close(target.closest('[data-modal]').dataset.modal);
        this._stackModalElements = [];
      }
    }
  }, {
    key: "_addListeners",
    value: function _addListeners(modal) {
      modal.addEventListener('click', this._modalClickHandler);
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_removeListeners",
    value: function _removeListeners(modal) {
      modal.removeEventListener('click', this._modalClickHandler);
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_stopInteractive",
    value: function _stopInteractive(modal) {
      if (this._stopPlay) {
        modal.querySelectorAll('video, audio').forEach(function (el) {
          return el.pause();
        });
        modal.querySelectorAll('[data-iframe]').forEach(function (el) {
          el.querySelector('iframe').contentWindow.postMessage('{"event": "command", "func": "pauseVideo", "args": ""}', '*');
        });
      }
    }
  }, {
    key: "_autoPlay",
    value: function _autoPlay(modal) {
      modal.querySelectorAll('[data-iframe]').forEach(function (el) {
        var autoPlay = el.closest('[data-auto-play]');
        if (autoPlay) {
          el.querySelector('iframe').contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
        }
      });
    }
  }, {
    key: "open",
    value: function open() {
      var _this = this;
      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      if (!modal || modal.classList.contains('is-active')) {
        return;
      }
      document.removeEventListener('click', this._documentClickHandler);
      this._openedModalElement = document.querySelector('.modal.is-active');
      if (this._openedModalElement) {
        this._scrollLock.enablePageScroll(this._openedModalElement);
        this._scrollLock.disablePageScroll(modal);
        this._enableScrolling = false;
        this.close(this._openedModalElement.dataset.modal);
      }
      this._setSettings(modalName);
      modal.classList.add('is-active');
      if (modalName !== this._stackModalElements[this._stackModalElements.length - 1]) {
        this._stackModalElements.push(modalName);
      }
      if (!this._openedModalElement) {
        this._scrollLock.disablePageScroll(modal);
      }
      if (this._openCallback) {
        this._openCallback();
      }
      if (this._lockFocus) {
        this._focusLock.lock('.modal.is-active', this._startFocus);
      }
      if (this._resetScrollPos) {
        modal.scrollTo(0, 0);
      }
      setTimeout(function () {
        _this._addListeners(modal);
        _this._autoPlay(modal);
        document.addEventListener('click', _this._documentClickHandler);
      }, this._eventTimeout);
    }
  }, {
    key: "back",
    value: function back() {
      if (!this._stackModalElements.length) {
        return;
      }
      var activeModal = this._stackModalElements[this._stackModalElements.length - 1];
      var prevModal = this._stackModalElements[this._stackModalElements.length - 2];
      if (this._stackModalElements.length === 1) {
        this._stackModalElements = [];
      }
      if (prevModal) {
        this._stackModalElements.pop();
        this.open(prevModal);
      }
      this.close(activeModal);
    }
  }, {
    key: "close",
    value: function close() {
      var _this2 = this;
      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      document.removeEventListener('click', this._documentClickHandler);
      if (!modal || !modal.classList.contains('is-active')) {
        return;
      }
      if (this._lockFocus) {
        this._focusLock.unlock(this._focusBack);
      }
      modal.classList.remove('is-active');
      this._removeListeners(modal);
      this._stopInteractive(modal);
      if (this._closeCallback) {
        this._closeCallback();
      }
      if (this._enableScrolling) {
        setTimeout(function () {
          _this2._scrollLock.enablePageScroll(modal);
        }, this._eventTimeout);
      }
      setTimeout(function () {
        document.addEventListener('click', _this2._documentClickHandler);
      }, this._eventTimeout);
      this._setSettings('default');
      this._enableScrolling = true;
    }
  }]);
  return Modals;
}();

/***/ }),

/***/ "./js/modules/scroll-trigger.js":
/*!**************************************!*\
  !*** ./js/modules/scroll-trigger.js ***!
  \**************************************/
/*! exports provided: scrollTrigger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scrollTrigger", function() { return scrollTrigger; });
var addObserver = function addObserver(el, options) {
  if (!('IntersectionObserver' in window)) {
    if (options.cb) {
      options.cb(el);
    } else {
      entry.target.classList.add('active');
    }
    return;
  }
  var observer = new IntersectionObserver(function (entries, observer) {
    entries.forEach(function (entry) {
      if (entry.isIntersecting) {
        if (options.cb) {
          options.cb(el);
        } else {
          entry.target.classList.add('active');
        }
        observer.unobserve(entry.target);
      }
    });
  }, options);
  observer.observe(el);
};
var scrollTrigger = function scrollTrigger(elem) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  addObserver(elem, options);
};


/***/ }),

/***/ "./js/modules/user-data.js":
/*!*********************************!*\
  !*** ./js/modules/user-data.js ***!
  \*********************************/
/*! exports provided: countData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "countData", function() { return countData; });
var countData = [[2, 4, 6, 8, 10, 12], ['>2', '>10', '>18', '>26', '>34', '>42', '>50'], ['>2', '>5', '>8', '>11', '>14', '>17', '>20']];


/***/ }),

/***/ "./js/utils/focus-lock.js":
/*!********************************!*\
  !*** ./js/utils/focus-lock.js ***!
  \********************************/
/*! exports provided: FocusLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusLock", function() { return FocusLock; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var SELECTORS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^="-"])'];
var FocusLock = /*#__PURE__*/function () {
  function FocusLock() {
    _classCallCheck(this, FocusLock);
    this._lockedSelector = null;
    this._focusableElements = null;
    this._endElement = null;
    this._selectors = SELECTORS;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
  }
  _createClass(FocusLock, [{
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var activeElement = document.activeElement;
      if (evt.key === 'Tab') {
        if (!this._focusableElements.length) {
          evt.preventDefault();
          activeElement.blur();
          return;
        }
        if (this._focusableElements.length === 1) {
          evt.preventDefault();
          this._focusableElements[0].focus();
          return;
        }
        if (this._focusableElements.length > 1 && !activeElement.closest(this._lockedSelector)) {
          evt.preventDefault();
          this._focusableElements[0].focus();
          return;
        }
      }
      if (evt.key === 'Tab' && !evt.shiftKey && activeElement === this._focusableElements[this._focusableElements.length - 1]) {
        evt.preventDefault();
        this._focusableElements[0].focus();
      }
      if (evt.key === 'Tab' && evt.shiftKey && activeElement === this._focusableElements[0]) {
        evt.preventDefault();
        this._focusableElements[this._focusableElements.length - 1].focus();
      }
    }
  }, {
    key: "lock",
    value: function lock(lockedSelector) {
      var startFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      this.unlock();
      this._lockedSelector = lockedSelector;
      var lockedElement = document.querySelector(this._lockedSelector);
      if (!lockedElement) {
        return;
      }
      this._focusableElements = lockedElement.querySelectorAll(this._selectors);
      this._endElement = document.activeElement;
      var startElement = lockedElement.querySelector('[data-focus]') || this._focusableElements[0];
      if (this._endElement) {
        this._endElement.blur();
      }
      if (startElement && startFocus) {
        startElement.focus();
      }
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "unlock",
    value: function unlock() {
      var returnFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      if (this._endElement && returnFocus) {
        this._endElement.focus();
      }
      this._lockedSelector = null;
      this._focusableElements = null;
      this._endElement = null;
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }]);
  return FocusLock;
}();
window.focusLock = new FocusLock();

/***/ }),

/***/ "./js/utils/ios-checker.js":
/*!*********************************!*\
  !*** ./js/utils/ios-checker.js ***!
  \*********************************/
/*! exports provided: iosChecker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosChecker", function() { return iosChecker; });
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform)
  // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

/***/ }),

/***/ "./js/utils/mobile-vh-fix.js":
/*!***********************************!*\
  !*** ./js/utils/mobile-vh-fix.js ***!
  \***********************************/
/*! exports provided: mobileVhFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mobileVhFix", function() { return mobileVhFix; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");

var mobileVhFix = function mobileVhFix() {
  var isMobile = /Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
  var isIE = !!window.MSInputMethodContext && !!document.documentMode;
  if (!isIE && (isMobile || Object(_ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"])())) {
    var updateViewportHeight = function updateViewportHeight() {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
    };
    updateViewportHeight();
    window.addEventListener('resize', updateViewportHeight);
  }
};


/***/ }),

/***/ "./js/utils/utils.js":
/*!***************************!*\
  !*** ./js/utils/utils.js ***!
  \***************************/
/*! exports provided: getElTop, createElement, renderElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getElTop", function() { return getElTop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createElement", function() { return createElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderElement", function() { return renderElement; });
var getElTop = function getElTop(el) {
  return el.getBoundingClientRect().top + window.pageYOffset;
};
var createElement = function createElement(template) {
  var newElement = document.createElement('div');
  newElement.innerHTML = template;
  return newElement.firstChild;
};
var renderElement = function renderElement(container, component) {
  var place = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'beforeend';
  switch (place) {
    case 'beforebegin':
      container.before(component);
      break;
    case 'afterbegin':
      container.prepend(component);
      break;
    case 'beforeend':
      container.append(component);
      break;
    case 'afterend':
      container.after(component);
      break;
  }
};

/***/ }),

/***/ "./js/vendor/scroll-lock.min.js":
/*!**************************************!*\
  !*** ./js/vendor/scroll-lock.min.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
!function (e, t) {
  "object" == ( false ? undefined : _typeof(exports)) && "object" == ( false ? undefined : _typeof(module)) ? module.exports = t() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;
}(this, function () {
  return function (l) {
    var r = {};
    function o(e) {
      if (r[e]) return r[e].exports;
      var t = r[e] = {
        i: e,
        l: !1,
        exports: {}
      };
      return l[e].call(t.exports, t, t.exports, o), t.l = !0, t.exports;
    }
    return o.m = l, o.c = r, o.d = function (e, t, l) {
      o.o(e, t) || Object.defineProperty(e, t, {
        enumerable: !0,
        get: l
      });
    }, o.r = function (e) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
        value: "Module"
      }), Object.defineProperty(e, "__esModule", {
        value: !0
      });
    }, o.t = function (t, e) {
      if (1 & e && (t = o(t)), 8 & e) return t;
      if (4 & e && "object" == _typeof(t) && t && t.__esModule) return t;
      var l = Object.create(null);
      if (o.r(l), Object.defineProperty(l, "default", {
        enumerable: !0,
        value: t
      }), 2 & e && "string" != typeof t) for (var r in t) o.d(l, r, function (e) {
        return t[e];
      }.bind(null, r));
      return l;
    }, o.n = function (e) {
      var t = e && e.__esModule ? function () {
        return e.default;
      } : function () {
        return e;
      };
      return o.d(t, "a", t), t;
    }, o.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }, o.p = "", o(o.s = 0);
  }([function (e, t, l) {
    "use strict";

    l.r(t);
    var r = function r(e) {
        return Array.isArray(e) ? e : [e];
      },
      a = function a(e) {
        return e instanceof Node;
      },
      o = function o(e, t) {
        if (e && t) {
          e = e instanceof NodeList ? e : [e];
          for (var l = 0; l < e.length && !0 !== t(e[l], l, e.length); l++);
        }
      },
      n = function n(e) {
        return console.error("[scroll-lock] ".concat(e));
      },
      b = function b(e) {
        if (Array.isArray(e)) return e.join(", ");
      },
      c = function c(e) {
        var t = [];
        return o(e, function (e) {
          return t.push(e);
        }), t;
      },
      h = function h(e, t) {
        var l = !(2 < arguments.length && void 0 !== arguments[2]) || arguments[2],
          r = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : document;
        if (l && -1 !== c(r.querySelectorAll(t)).indexOf(e)) return e;
        for (; (e = e.parentElement) && -1 === c(r.querySelectorAll(t)).indexOf(e););
        return e;
      },
      v = function v(e, t) {
        var l = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : document;
        return -1 !== c(l.querySelectorAll(t)).indexOf(e);
      },
      i = function i(e) {
        if (e) return "hidden" === getComputedStyle(e).overflow;
      },
      m = function m(e) {
        if (e) return !!i(e) || e.scrollTop <= 0;
      },
      S = function S(e) {
        if (e) {
          if (i(e)) return !0;
          var t = e.scrollTop;
          return e.scrollHeight <= t + e.offsetHeight;
        }
      },
      y = function y(e) {
        if (e) return !!i(e) || e.scrollLeft <= 0;
      },
      k = function k(e) {
        if (e) {
          if (i(e)) return !0;
          var t = e.scrollLeft;
          return e.scrollWidth <= t + e.offsetWidth;
        }
      };
    l.d(t, "disablePageScroll", function () {
      return d;
    }), l.d(t, "enablePageScroll", function () {
      return s;
    }), l.d(t, "getScrollState", function () {
      return f;
    }), l.d(t, "clearQueueScrollLocks", function () {
      return p;
    }), l.d(t, "getTargetScrollBarWidth", function () {
      return g;
    }), l.d(t, "getCurrentTargetScrollBarWidth", function () {
      return A;
    }), l.d(t, "getPageScrollBarWidth", function () {
      return G;
    }), l.d(t, "getCurrentPageScrollBarWidth", function () {
      return T;
    }), l.d(t, "addScrollableTarget", function () {
      return L;
    }), l.d(t, "removeScrollableTarget", function () {
      return W;
    }), l.d(t, "addScrollableSelector", function () {
      return x;
    }), l.d(t, "removeScrollableSelector", function () {
      return F;
    }), l.d(t, "addLockableTarget", function () {
      return Y;
    }), l.d(t, "addLockableSelector", function () {
      return E;
    }), l.d(t, "setFillGapMethod", function () {
      return O;
    }), l.d(t, "addFillGapTarget", function () {
      return P;
    }), l.d(t, "removeFillGapTarget", function () {
      return j;
    }), l.d(t, "addFillGapSelector", function () {
      return q;
    }), l.d(t, "removeFillGapSelector", function () {
      return M;
    }), l.d(t, "refillGaps", function () {
      return N;
    });
    var u = ["padding", "margin", "width", "max-width", "none"],
      w = {
        scroll: !0,
        queue: 0,
        scrollableSelectors: ["[data-scroll-lock-scrollable]"],
        lockableSelectors: ["body", "[data-scroll-lock-lockable]"],
        fillGapSelectors: ["body", "[data-scroll-lock-fill-gap]", "[data-scroll-lock-lockable]"],
        fillGapMethod: u[0],
        startTouchY: 0,
        startTouchX: 0
      },
      d = function d(e) {
        w.queue <= 0 && (w.scroll = !1, B(), X()), L(e), w.queue++;
      },
      s = function s(e) {
        0 < w.queue && w.queue--, w.queue <= 0 && (w.scroll = !0, C(), Q()), W(e);
      },
      f = function f() {
        return w.scroll;
      },
      p = function p() {
        w.queue = 0;
      },
      g = function g(e) {
        var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
        if (a(e)) {
          var l = e.style.overflowY;
          t ? f() || (e.style.overflowY = e.getAttribute("data-scroll-lock-saved-overflow-y-property")) : e.style.overflowY = "scroll";
          var r = A(e);
          return e.style.overflowY = l, r;
        }
        return 0;
      },
      A = function A(e) {
        if (a(e)) {
          if (e === document.body) {
            var t = document.documentElement.clientWidth;
            return window.innerWidth - t;
          }
          var l = e.style.borderLeftWidth,
            r = e.style.borderRightWidth;
          e.style.borderLeftWidth = "0px", e.style.borderRightWidth = "0px";
          var o = e.offsetWidth - e.clientWidth;
          return e.style.borderLeftWidth = l, e.style.borderRightWidth = r, o;
        }
        return 0;
      },
      G = function G() {
        var e = 0 < arguments.length && void 0 !== arguments[0] && arguments[0];
        return g(document.body, e);
      },
      T = function T() {
        return A(document.body);
      },
      L = function L(e) {
        e && r(e).map(function (e) {
          o(e, function (e) {
            a(e) ? e.setAttribute("data-scroll-lock-scrollable", "") : n('"'.concat(e, '" is not a Element.'));
          });
        });
      },
      W = function W(e) {
        e && r(e).map(function (e) {
          o(e, function (e) {
            a(e) ? e.removeAttribute("data-scroll-lock-scrollable") : n('"'.concat(e, '" is not a Element.'));
          });
        });
      },
      x = function x(e) {
        e && r(e).map(function (e) {
          w.scrollableSelectors.push(e);
        });
      },
      F = function F(e) {
        e && r(e).map(function (t) {
          w.scrollableSelectors = w.scrollableSelectors.filter(function (e) {
            return e !== t;
          });
        });
      },
      Y = function Y(e) {
        e && (r(e).map(function (e) {
          o(e, function (e) {
            a(e) ? e.setAttribute("data-scroll-lock-lockable", "") : n('"'.concat(e, '" is not a Element.'));
          });
        }), f() || B());
      },
      E = function E(e) {
        e && (r(e).map(function (e) {
          w.lockableSelectors.push(e);
        }), f() || B(), q(e));
      },
      O = function O(e) {
        if (e) if (-1 !== u.indexOf(e)) w.fillGapMethod = e, N();else {
          var t = u.join(", ");
          n('"'.concat(e, '" method is not available!\nAvailable fill gap methods: ').concat(t, "."));
        }
      },
      P = function P(e) {
        e && r(e).map(function (e) {
          o(e, function (e) {
            a(e) ? (e.setAttribute("data-scroll-lock-fill-gap", ""), w.scroll || H(e)) : n('"'.concat(e, '" is not a Element.'));
          });
        });
      },
      j = function j(e) {
        e && r(e).map(function (e) {
          o(e, function (e) {
            a(e) ? (e.removeAttribute("data-scroll-lock-fill-gap"), w.scroll || I(e)) : n('"'.concat(e, '" is not a Element.'));
          });
        });
      },
      q = function q(e) {
        e && r(e).map(function (e) {
          -1 === w.fillGapSelectors.indexOf(e) && (w.fillGapSelectors.push(e), w.scroll || D(e));
        });
      },
      M = function M(e) {
        e && r(e).map(function (t) {
          w.fillGapSelectors = w.fillGapSelectors.filter(function (e) {
            return e !== t;
          }), w.scroll || z(t);
        });
      },
      N = function N() {
        w.scroll || X();
      },
      B = function B() {
        var e = b(w.lockableSelectors);
        K(e);
      },
      C = function C() {
        var e = b(w.lockableSelectors);
        R(e);
      },
      K = function K(e) {
        var t = document.querySelectorAll(e);
        o(t, function (e) {
          U(e);
        });
      },
      R = function R(e) {
        var t = document.querySelectorAll(e);
        o(t, function (e) {
          _(e);
        });
      },
      U = function U(e) {
        if (a(e) && "true" !== e.getAttribute("data-scroll-lock-locked")) {
          var t = window.getComputedStyle(e);
          e.setAttribute("data-scroll-lock-saved-overflow-y-property", t.overflowY), e.setAttribute("data-scroll-lock-saved-inline-overflow-property", e.style.overflow), e.setAttribute("data-scroll-lock-saved-inline-overflow-y-property", e.style.overflowY), e.style.overflow = "hidden", e.setAttribute("data-scroll-lock-locked", "true");
        }
      },
      _ = function _(e) {
        a(e) && "true" === e.getAttribute("data-scroll-lock-locked") && (e.style.overflow = e.getAttribute("data-scroll-lock-saved-inline-overflow-property"), e.style.overflowY = e.getAttribute("data-scroll-lock-saved-inline-overflow-y-property"), e.removeAttribute("data-scroll-lock-saved-overflow-property"), e.removeAttribute("data-scroll-lock-saved-inline-overflow-property"), e.removeAttribute("data-scroll-lock-saved-inline-overflow-y-property"), e.removeAttribute("data-scroll-lock-locked"));
      },
      X = function X() {
        w.fillGapSelectors.map(function (e) {
          D(e);
        });
      },
      Q = function Q() {
        w.fillGapSelectors.map(function (e) {
          z(e);
        });
      },
      D = function D(e) {
        var t = document.querySelectorAll(e),
          l = -1 !== w.lockableSelectors.indexOf(e);
        o(t, function (e) {
          H(e, l);
        });
      },
      H = function H(e) {
        var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
        if (a(e)) {
          var l;
          if ("" === e.getAttribute("data-scroll-lock-lockable") || t) l = g(e, !0);else {
            var r = h(e, b(w.lockableSelectors));
            l = g(r, !0);
          }
          "true" === e.getAttribute("data-scroll-lock-filled-gap") && I(e);
          var o = window.getComputedStyle(e);
          if (e.setAttribute("data-scroll-lock-filled-gap", "true"), e.setAttribute("data-scroll-lock-current-fill-gap-method", w.fillGapMethod), "margin" === w.fillGapMethod) {
            var n = parseFloat(o.marginRight);
            e.style.marginRight = "".concat(n + l, "px");
          } else if ("width" === w.fillGapMethod) e.style.width = "calc(100% - ".concat(l, "px)");else if ("max-width" === w.fillGapMethod) e.style.maxWidth = "calc(100% - ".concat(l, "px)");else if ("padding" === w.fillGapMethod) {
            var c = parseFloat(o.paddingRight);
            e.style.paddingRight = "".concat(c + l, "px");
          }
        }
      },
      z = function z(e) {
        var t = document.querySelectorAll(e);
        o(t, function (e) {
          I(e);
        });
      },
      I = function I(e) {
        if (a(e) && "true" === e.getAttribute("data-scroll-lock-filled-gap")) {
          var t = e.getAttribute("data-scroll-lock-current-fill-gap-method");
          e.removeAttribute("data-scroll-lock-filled-gap"), e.removeAttribute("data-scroll-lock-current-fill-gap-method"), "margin" === t ? e.style.marginRight = "" : "width" === t ? e.style.width = "" : "max-width" === t ? e.style.maxWidth = "" : "padding" === t && (e.style.paddingRight = "");
        }
      };
    "undefined" != typeof window && window.addEventListener("resize", function (e) {
      N();
    }), "undefined" != typeof document && (document.addEventListener("touchstart", function (e) {
      w.scroll || (w.startTouchY = e.touches[0].clientY, w.startTouchX = e.touches[0].clientX);
    }), document.addEventListener("touchmove", function (n) {
      if (!w.scroll) {
        var e = w.startTouchY,
          t = w.startTouchX,
          l = n.touches[0].clientY,
          r = n.touches[0].clientX;
        if (n.touches.length < 2) {
          var c = b(w.scrollableSelectors),
            a = e < l,
            i = l < e,
            u = t < r,
            d = r < t,
            s = e + 3 < l,
            f = l < e - 3,
            p = t + 3 < r,
            g = r < t - 3;
          !function e(t) {
            var l = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
            if (t) {
              var r = h(t, c, !1);
              if (v(t, 'input[type="range"]')) return !1;
              if (l || v(t, 'textarea, [contenteditable="true"]') && h(t, c) || v(t, c)) {
                var o = !1;
                y(t) && k(t) ? (a && m(t) || i && S(t)) && (o = !0) : m(t) && S(t) ? (u && y(t) || d && k(t)) && (o = !0) : (s && m(t) || f && S(t) || p && y(t) || g && k(t)) && (o = !0), o && (r ? e(r, !0) : n.cancelable && n.preventDefault());
              } else e(r);
            } else n.cancelable && n.preventDefault();
          }(n.target);
        }
      }
    }, {
      passive: !1
    }), document.addEventListener("touchend", function (e) {
      w.scroll || (w.startTouchY = 0, w.startTouchX = 0);
    }));
    var J = {
        hide: function hide(e) {
          n('"hide" is deprecated! Use "disablePageScroll" instead. \n https://github.com/FL3NKEY/scroll-lock#disablepagescrollscrollabletarget'), d(e);
        },
        show: function show(e) {
          n('"show" is deprecated! Use "enablePageScroll" instead. \n https://github.com/FL3NKEY/scroll-lock#enablepagescrollscrollabletarget'), s(e);
        },
        toggle: function toggle(e) {
          n('"toggle" is deprecated! Do not use it.'), f() ? d() : s(e);
        },
        getState: function getState() {
          return n('"getState" is deprecated! Use "getScrollState" instead. \n https://github.com/FL3NKEY/scroll-lock#getscrollstate'), f();
        },
        getWidth: function getWidth() {
          return n('"getWidth" is deprecated! Use "getPageScrollBarWidth" instead. \n https://github.com/FL3NKEY/scroll-lock#getpagescrollbarwidth'), G();
        },
        getCurrentWidth: function getCurrentWidth() {
          return n('"getCurrentWidth" is deprecated! Use "getCurrentPageScrollBarWidth" instead. \n https://github.com/FL3NKEY/scroll-lock#getcurrentpagescrollbarwidth'), T();
        },
        setScrollableTargets: function setScrollableTargets(e) {
          n('"setScrollableTargets" is deprecated! Use "addScrollableTarget" instead. \n https://github.com/FL3NKEY/scroll-lock#addscrollabletargetscrollabletarget'), L(e);
        },
        setFillGapSelectors: function setFillGapSelectors(e) {
          n('"setFillGapSelectors" is deprecated! Use "addFillGapSelector" instead. \n https://github.com/FL3NKEY/scroll-lock#addfillgapselectorfillgapselector'), q(e);
        },
        setFillGapTargets: function setFillGapTargets(e) {
          n('"setFillGapTargets" is deprecated! Use "addFillGapTarget" instead. \n https://github.com/FL3NKEY/scroll-lock#addfillgaptargetfillgaptarget'), P(e);
        },
        clearQueue: function clearQueue() {
          n('"clearQueue" is deprecated! Use "clearQueueScrollLocks" instead. \n https://github.com/FL3NKEY/scroll-lock#clearqueuescrolllocks'), p();
        }
      },
      V = function (o) {
        for (var e = 1; e < arguments.length; e++) {
          var n = null != arguments[e] ? arguments[e] : {},
            t = Object.keys(n);
          "function" == typeof Object.getOwnPropertySymbols && (t = t.concat(Object.getOwnPropertySymbols(n).filter(function (e) {
            return Object.getOwnPropertyDescriptor(n, e).enumerable;
          }))), t.forEach(function (e) {
            var t, l, r;
            t = o, r = n[l = e], l in t ? Object.defineProperty(t, l, {
              value: r,
              enumerable: !0,
              configurable: !0,
              writable: !0
            }) : t[l] = r;
          });
        }
        return o;
      }({
        disablePageScroll: d,
        enablePageScroll: s,
        getScrollState: f,
        clearQueueScrollLocks: p,
        getTargetScrollBarWidth: g,
        getCurrentTargetScrollBarWidth: A,
        getPageScrollBarWidth: G,
        getCurrentPageScrollBarWidth: T,
        addScrollableSelector: x,
        removeScrollableSelector: F,
        addScrollableTarget: L,
        removeScrollableTarget: W,
        addLockableSelector: E,
        addLockableTarget: Y,
        addFillGapSelector: q,
        removeFillGapSelector: M,
        addFillGapTarget: P,
        removeFillGapTarget: j,
        setFillGapMethod: O,
        refillGaps: N,
        _state: w
      }, J);
    t.default = V;
  }]).default;
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/module.js */ "../node_modules/webpack/buildin/module.js")(module)))

/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map